namespace VK
{
	
	/** Converts a string to a VK code. */
	int from_name(const string &in name)
	{
		if(name == 'LeftButton') return 0x01;
		if(name == 'RightButton') return 0x02;
		if(name == 'Cancel') return 0x03;
		if(name == 'MiddleButton') return 0x04;
		if(name == 'XButton1') return 0x05;
		if(name == 'XButton2') return 0x06;
		if(name == 'Back') return 0x08;
		if(name == 'Tab') return 0x09;
		if(name == 'Clear') return 0x0C;
		if(name == 'Return') return 0x0D;
		if(name == 'Shift') return 0x10;
		if(name == 'Control') return 0x11;
		if(name == 'Menu') return 0x12;
		if(name == 'Alt') return 0x12;
		if(name == 'Pause') return 0x13;
		if(name == 'Capital') return 0x14;
		if(name == 'Kana') return 0x15;
		if(name == 'Hanguel') return 0x15;
		if(name == 'Hangul') return 0x15;
		if(name == 'ImeOn') return 0x16;
		if(name == 'Junja') return 0x17;
		if(name == 'Final') return 0x18;
		if(name == 'Hanja') return 0x19;
		if(name == 'Kanji') return 0x19;
		if(name == 'ImeOff') return 0x1A;
		if(name == 'Escape') return 0x1B;
		if(name == 'Convert') return 0x1C;
		if(name == 'NonConvert') return 0x1D;
		if(name == 'Accept') return 0x1E;
		if(name == 'ModeChange') return 0x1F;
		if(name == 'Space') return 0x20;
		if(name == 'Prior') return 0x21;
		if(name == 'Next') return 0x22;
		if(name == 'End') return 0x23;
		if(name == 'Home') return 0x24;
		if(name == 'Left') return 0x25;
		if(name == 'Up') return 0x26;
		if(name == 'Right') return 0x27;
		if(name == 'Down') return 0x28;
		if(name == 'Select') return 0x29;
		if(name == 'Print') return 0x2A;
		if(name == 'Execute') return 0x2B;
		if(name == 'Snapshot') return 0x2C;
		if(name == 'Insert') return 0x2D;
		if(name == 'Delete') return 0x2E;
		if(name == 'Help') return 0x2F;
		if(name == 'Digit0') return 0x30;
		if(name == 'Digit1') return 0x31;
		if(name == 'Digit2') return 0x32;
		if(name == 'Digit3') return 0x33;
		if(name == 'Digit4') return 0x34;
		if(name == 'Digit5') return 0x35;
		if(name == 'Digit6') return 0x36;
		if(name == 'Digit7') return 0x37;
		if(name == 'Digit8') return 0x38;
		if(name == 'Digit9') return 0x39;
		if(name == 'A') return 0x41;
		if(name == 'B') return 0x42;
		if(name == 'C') return 0x43;
		if(name == 'D') return 0x44;
		if(name == 'E') return 0x45;
		if(name == 'F') return 0x46;
		if(name == 'G') return 0x47;
		if(name == 'H') return 0x48;
		if(name == 'I') return 0x49;
		if(name == 'J') return 0x4A;
		if(name == 'K') return 0x4B;
		if(name == 'L') return 0x4C;
		if(name == 'M') return 0x4D;
		if(name == 'N') return 0x4E;
		if(name == 'O') return 0x4F;
		if(name == 'P') return 0x50;
		if(name == 'Q') return 0x51;
		if(name == 'R') return 0x52;
		if(name == 'S') return 0x53;
		if(name == 'T') return 0x54;
		if(name == 'U') return 0x55;
		if(name == 'V') return 0x56;
		if(name == 'W') return 0x57;
		if(name == 'X') return 0x58;
		if(name == 'Y') return 0x59;
		if(name == 'Z') return 0x5A;
		if(name == 'LeftWin') return 0x5B;
		if(name == 'RightWin') return 0x5C;
		if(name == 'Apps') return 0x5D;
		if(name == 'Sleep') return 0x5F;
		if(name == 'Numpad0') return 0x60;
		if(name == 'Numpad1') return 0x61;
		if(name == 'Numpad2') return 0x62;
		if(name == 'Numpad3') return 0x63;
		if(name == 'Numpad4') return 0x64;
		if(name == 'Numpad5') return 0x65;
		if(name == 'Numpad6') return 0x66;
		if(name == 'Numpad7') return 0x67;
		if(name == 'Numpad8') return 0x68;
		if(name == 'Numpad9') return 0x69;
		if(name == 'Multiply') return 0x6A;
		if(name == 'Add') return 0x6B;
		if(name == 'Separator') return 0x6C;
		if(name == 'Subtract') return 0x6D;
		if(name == 'Decimal') return 0x6E;
		if(name == 'Divide') return 0x6F;
		if(name == 'F1') return 0x70;
		if(name == 'F2') return 0x71;
		if(name == 'F3') return 0x72;
		if(name == 'F4') return 0x73;
		if(name == 'F5') return 0x74;
		if(name == 'F6') return 0x75;
		if(name == 'F7') return 0x76;
		if(name == 'F8') return 0x77;
		if(name == 'F9') return 0x78;
		if(name == 'F10') return 0x79;
		if(name == 'F11') return 0x7A;
		if(name == 'F12') return 0x7B;
		if(name == 'F13') return 0x7C;
		if(name == 'F14') return 0x7D;
		if(name == 'F15') return 0x7E;
		if(name == 'F16') return 0x7F;
		if(name == 'F17') return 0x80;
		if(name == 'F18') return 0x81;
		if(name == 'F19') return 0x82;
		if(name == 'F20') return 0x83;
		if(name == 'F21') return 0x84;
		if(name == 'F22') return 0x85;
		if(name == 'F23') return 0x86;
		if(name == 'F24') return 0x87;
		if(name == 'Numlock') return 0x90;
		if(name == 'Scroll') return 0x91;
		if(name == 'LeftShift') return 0xA0;
		if(name == 'RightShift') return 0xA1;
		if(name == 'LeftControl') return 0xA2;
		if(name == 'RightControl') return 0xA3;
		if(name == 'LeftMenu') return 0xA4;
		if(name == 'RightMenu') return 0xA5;
		if(name == 'BrowserBack') return 0xA6;
		if(name == 'BrowserForward') return 0xA7;
		if(name == 'BrowserRefresh') return 0xA8;
		if(name == 'BrowserStop') return 0xA9;
		if(name == 'BrowserSearch') return 0xAA;
		if(name == 'BrowserFavorites') return 0xAB;
		if(name == 'BrowserHome') return 0xAC;
		if(name == 'VolumeMute') return 0xAD;
		if(name == 'VolumeDown') return 0xAE;
		if(name == 'VolumeUp') return 0xAF;
		if(name == 'MediaNextTrack') return 0xB0;
		if(name == 'MediaPrevTrack') return 0xB1;
		if(name == 'MediaStop') return 0xB2;
		if(name == 'MediaPlayPause') return 0xB3;
		if(name == 'LaunchMail') return 0xB4;
		if(name == 'LaunchMediaSelect') return 0xB5;
		if(name == 'LaunchApp1') return 0xB6;
		if(name == 'LaunchApp2') return 0xB7;
		if(name == 'Oem1') return 0xBA;
		if(name == 'SemiColon') return 0xBA;
		if(name == 'OemPlus') return 0xBB;
		if(name == 'OemComma') return 0xBC;
		if(name == 'OemMinus') return 0xBD;
		if(name == 'OemPeriod') return 0xBE;
		if(name == 'Oem2') return 0xBF;
		if(name == 'ForwardSlash') return 0xBF;
		if(name == 'Oem3') return 0xC0;
		if(name == 'Tilde') return 0xC0;
		if(name == 'Oem4') return 0xDB;
		if(name == 'LeftBrace') return 0xDB;
		if(name == 'Oem5') return 0xDC;
		if(name == 'BackSlash') return 0xDC;
		if(name == 'Oem6') return 0xDD;
		if(name == 'RightBrace') return 0xDD;
		if(name == 'Oem7') return 0xDE;
		if(name == 'SingleQuote') return 0xDE;
		if(name == 'Oem8') return 0xDF;
		if(name == 'Oem102') return 0xE2;
		if(name == 'Processname') return 0xE5;
		if(name == 'Packet') return 0xE7;
		if(name == 'Attn') return 0xF6;
		if(name == 'Crsel') return 0xF7;
		if(name == 'Exsel') return 0xF8;
		if(name == 'Ereof') return 0xF9;
		if(name == 'Play') return 0xFA;
		if(name == 'Zoom') return 0xFB;
		if(name == 'Noname') return 0xFC;
		if(name == 'Pa1') return 0xFD;
		if(name == 'OemClear') return 0xFE;
		
		return 0;
	}
	
	/** Converts a VK code to a readable string. */
	string to_name(const int vk)
	{
		switch(vk)
		{
			case 0x01: return 'LeftButton';
			case 0x02: return 'RightButton';
			case 0x03: return 'Cancel';
			case 0x04: return 'MiddleButton';
			case 0x05: return 'XButton1';
			case 0x06: return 'XButton2';
			case 0x08: return 'Back';
			case 0x09: return 'Tab';
			case 0x0C: return 'Clear';
			case 0x0D: return 'Return';
			case 0x10: return 'Shift';
			case 0x11: return 'Control';
			case 0x12: return 'Alt';
			case 0x13: return 'Pause';
			case 0x14: return 'Capital';
			case 0x15: return 'Kana';
			case 0x16: return 'ImeOn';
			case 0x17: return 'Junja';
			case 0x18: return 'Final';
			case 0x19: return 'Kanji';
			case 0x1A: return 'ImeOff';
			case 0x1B: return 'Escape';
			case 0x1C: return 'Convert';
			case 0x1D: return 'NonConvert';
			case 0x1E: return 'Accept';
			case 0x1F: return 'ModeChange';
			case 0x20: return 'Space';
			case 0x21: return 'Prior';
			case 0x22: return 'Next';
			case 0x23: return 'End';
			case 0x24: return 'Home';
			case 0x25: return 'Left';
			case 0x26: return 'Up';
			case 0x27: return 'Right';
			case 0x28: return 'Down';
			case 0x29: return 'Select';
			case 0x2A: return 'Print';
			case 0x2B: return 'Execute';
			case 0x2C: return 'Snapshot';
			case 0x2D: return 'Insert';
			case 0x2E: return 'Delete';
			case 0x2F: return 'Help';
			case 0x30: return 'Digit0';
			case 0x31: return 'Digit1';
			case 0x32: return 'Digit2';
			case 0x33: return 'Digit3';
			case 0x34: return 'Digit4';
			case 0x35: return 'Digit5';
			case 0x36: return 'Digit6';
			case 0x37: return 'Digit7';
			case 0x38: return 'Digit8';
			case 0x39: return 'Digit9';
			case 0x41: return 'A';
			case 0x42: return 'B';
			case 0x43: return 'C';
			case 0x44: return 'D';
			case 0x45: return 'E';
			case 0x46: return 'F';
			case 0x47: return 'G';
			case 0x48: return 'H';
			case 0x49: return 'I';
			case 0x4A: return 'J';
			case 0x4B: return 'K';
			case 0x4C: return 'L';
			case 0x4D: return 'M';
			case 0x4E: return 'N';
			case 0x4F: return 'O';
			case 0x50: return 'P';
			case 0x51: return 'Q';
			case 0x52: return 'R';
			case 0x53: return 'S';
			case 0x54: return 'T';
			case 0x55: return 'U';
			case 0x56: return 'V';
			case 0x57: return 'W';
			case 0x58: return 'X';
			case 0x59: return 'Y';
			case 0x5A: return 'Z';
			case 0x5B: return 'LeftWin';
			case 0x5C: return 'RightWin';
			case 0x5D: return 'Apps';
			case 0x5F: return 'Sleep';
			case 0x60: return 'Numpad0';
			case 0x61: return 'Numpad1';
			case 0x62: return 'Numpad2';
			case 0x63: return 'Numpad3';
			case 0x64: return 'Numpad4';
			case 0x65: return 'Numpad5';
			case 0x66: return 'Numpad6';
			case 0x67: return 'Numpad7';
			case 0x68: return 'Numpad8';
			case 0x69: return 'Numpad9';
			case 0x6A: return 'Multiply';
			case 0x6B: return 'Add';
			case 0x6C: return 'Separator';
			case 0x6D: return 'Subtract';
			case 0x6E: return 'Decimal';
			case 0x6F: return 'Divide';
			case 0x70: return 'F1';
			case 0x71: return 'F2';
			case 0x72: return 'F3';
			case 0x73: return 'F4';
			case 0x74: return 'F5';
			case 0x75: return 'F6';
			case 0x76: return 'F7';
			case 0x77: return 'F8';
			case 0x78: return 'F9';
			case 0x79: return 'F10';
			case 0x7A: return 'F11';
			case 0x7B: return 'F12';
			case 0x7C: return 'F13';
			case 0x7D: return 'F14';
			case 0x7E: return 'F15';
			case 0x7F: return 'F16';
			case 0x80: return 'F17';
			case 0x81: return 'F18';
			case 0x82: return 'F19';
			case 0x83: return 'F20';
			case 0x84: return 'F21';
			case 0x85: return 'F22';
			case 0x86: return 'F23';
			case 0x87: return 'F24';
			case 0x90: return 'Numlock';
			case 0x91: return 'Scroll';
			case 0xA0: return 'LeftShift';
			case 0xA1: return 'RightShift';
			case 0xA2: return 'LeftControl';
			case 0xA3: return 'RightControl';
			case 0xA4: return 'LeftMenu';
			case 0xA5: return 'RightMenu';
			case 0xA6: return 'BrowserBack';
			case 0xA7: return 'BrowserForward';
			case 0xA8: return 'BrowserRefresh';
			case 0xA9: return 'BrowserStop';
			case 0xAA: return 'BrowserSearch';
			case 0xAB: return 'BrowserFavorites';
			case 0xAC: return 'BrowserHome';
			case 0xAD: return 'VolumeMute';
			case 0xAE: return 'VolumeDown';
			case 0xAF: return 'VolumeUp';
			case 0xB0: return 'MediaNextTrack';
			case 0xB1: return 'MediaPrevTrack';
			case 0xB2: return 'MediaStop';
			case 0xB3: return 'MediaPlayPause';
			case 0xB4: return 'LaunchMail';
			case 0xB5: return 'LaunchMediaSelect';
			case 0xB6: return 'LaunchApp1';
			case 0xB7: return 'LaunchApp2';
			case 0xBA: return 'SemiColon';
			case 0xBB: return 'OemPlus';
			case 0xBC: return 'OemComma';
			case 0xBD: return 'OemMinus';
			case 0xBE: return 'OemPeriod';
			case 0xBF: return 'ForwardSlash';
			case 0xC0: return 'Tilde';
			case 0xDB: return 'LeftBrace';
			case 0xDC: return 'BackSlash';
			case 0xDD: return 'RightBrace';
			case 0xDE: return 'SingleQuote';
			case 0xDF: return 'Oem8';
			case 0xE2: return 'Oem102';
			case 0xE5: return 'Processname';
			case 0xE7: return 'Packet';
			case 0xF6: return 'Attn';
			case 0xF7: return 'Crsel';
			case 0xF8: return 'Exsel';
			case 0xF9: return 'Ereof';
			case 0xFA: return 'Play';
			case 0xFB: return 'Zoom';
			case 0xFC: return 'Noname';
			case 0xFD: return 'Pa1';
			case 0xFE: return 'OemClear';
		}
		
		return '';
	}
	
}
